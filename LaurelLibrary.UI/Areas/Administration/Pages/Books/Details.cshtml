@page "{id:guid}"
@model LaurelLibrary.UI.Areas.Administration.Pages.Books.DetailsModel
@using System.Text.RegularExpressions
@using System.Net
@using Microsoft.CodeAnalysis.CSharp.Syntax

<style>
    /* Fix dropdown visibility in table containers */
    .table-responsive {
        overflow: visible !important;
    }

    /* Ensure dropdowns have proper z-index and positioning */
    .dropdown-menu {
        z-index: 1050;
        position: absolute;
    }

    /* Handle table cell positioning for dropdowns */
    .table td {
        position: relative;
    }

    /* Prevent dropdown from being cut off by table boundaries */
    .card-body {
        overflow: visible;
    }
</style>

<!-- Page Header -->
<div class="d-flex align-items-center justify-content-between mt-3 mb-4">
    <div class="d-flex align-items-center gap-3">
        <a class="btn btn-link p-0 icon-link" asp-page="List" aria-label="Back to list">
            <i class="bi bi-arrow-left fs-3" aria-hidden="true"></i>
        </a>
        <h1 class="mb-0">Book Details</h1>
    </div>
</div>

@if (!string.IsNullOrEmpty(Model.StatusMessage))
{
    <div class="alert alert-info alert-dismissible fade show" role="alert">
        @Model.StatusMessage
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (Model.Book == null)
{
    <div class="alert alert-warning">Book not found.</div>
}
else
{
    <!-- Main Book Information Card -->
    <div class="card shadow-sm mb-4">
        <div class="row g-0">
            <!-- Book Cover -->
            <div class="col-md-3 d-flex align-items-center justify-content-center p-3">
                @if (!string.IsNullOrWhiteSpace(Model.Book.Image))
                {
                    <img src="@Model.Book.Image" class="img-fluid rounded" style="max-height: 400px; object-fit: contain;"
                        alt="@Model.Book.Title">
                }
                else
                {
                    <div class="border rounded p-5 text-center text-muted bg-light"
                        style="min-height: 300px; display: flex; align-items: center; justify-content: center;">
                        <div>
                            <i class="bi bi-book fs-1 d-block mb-2"></i>
                            <span>No cover available</span>
                        </div>
                    </div>
                }
            </div>

            <!-- Book Details -->
            <div class="col-md-9">
                <div class="card-body">
                    <!-- Title and Primary Info -->
                    <h2 class="card-title mb-3">@Model.Book.Title</h2>

                    <div class="mb-3">
                        <p class="mb-2">
                            <i class="bi bi-person-fill text-primary me-2"></i>
                            <strong>Authors:</strong>
                            <span class="ms-1">@string.Join(", ", Model.Book.Authors.Select(a => a.FullName))</span>
                        </p>
                        <p class="mb-2">
                            <i class="bi bi-tag-fill text-primary me-2"></i>
                            <strong>Categories:</strong>
                            <span class="ms-1">@string.Join(", ", Model.Book.Categories.Select(c => c.Name))</span>
                        </p>
                    </div>

                    <!-- Synopsis -->
                    @if (!string.IsNullOrWhiteSpace(Model.Book.Synopsis))
                    {
                        <div class="mb-3">
                            <h6 class="text-muted mb-2">Synopsis</h6>
                            <p class="card-text">@Model.Book.Synopsis</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Tabs Navigation -->
    <ul class="nav nav-tabs mb-3" id="bookDetailsTabs" role="tablist">
        <li class="nav-item" role="presentation">
            <button class="nav-link active" id="details-tab" data-bs-toggle="tab" data-bs-target="#details-pane"
                type="button" role="tab" aria-controls="details-pane" aria-selected="true">
                <i class="bi bi-info-circle me-2"></i>Details
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="copies-tab" data-bs-toggle="tab" data-bs-target="#copies-pane" type="button"
                role="tab" aria-controls="copies-pane" aria-selected="false">
                <i class="bi bi-collection me-2"></i>Book Copies
                @if (Model.Book.BookInstances != null && Model.Book.BookInstances.Any())
                {
                    <span class="badge bg-primary rounded-pill ms-1">@Model.Book.BookInstances.Count</span>
                }
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="audit-tab" data-bs-toggle="tab" data-bs-target="#audit-pane" type="button"
                role="tab" aria-controls="audit-pane" aria-selected="false">
                <i class="bi bi-clock-history me-2"></i>Audit Information
            </button>
        </li>
    </ul>

    <!-- Tab Content -->
    <div class="tab-content" id="bookDetailsTabContent">
        <!-- Details Tab -->
        <div class="tab-pane fade show active" id="details-pane" role="tabpanel" aria-labelledby="details-tab">
            <div class="card shadow-sm">
                <div class="card-body">
                    <!-- Book Metadata in organized sections -->
                    <div class="row g-4">
                        <!-- Publishing Information -->
                        <div class="col-md-6">
                            <h5 class="text-muted mb-3"><i class="bi bi-info-circle me-2"></i>Publishing Information</h5>
                            <div>
                                <div class="mb-2"><strong>ISBN:</strong> <span class="ms-1">@Model.Book.Isbn</span></div>
                                <div class="mb-2"><strong>Published:</strong> <span
                                        class="ms-1">@Model.Book.DatePublished.ToShortDateString()</span></div>
                                <div class="mb-2"><strong>Edition:</strong> <span class="ms-1">@Model.Book.Edition</span>
                                </div>
                                <div class="mb-2"><strong>Language:</strong> <span class="ms-1">@Model.Book.Language</span>
                                </div>
                            </div>
                        </div>

                        <!-- Physical Information -->
                        <div class="col-md-6">
                            <h5 class="text-muted mb-3"><i class="bi bi-book me-2"></i>Physical Information</h5>
                            <div>
                                <div class="mb-2"><strong>Binding:</strong> <span class="ms-1">@Model.Book.Binding</span>
                                </div>
                                <div class="mb-2"><strong>Pages:</strong> <span class="ms-1">@Model.Book.Pages</span></div>
                                <div class="mb-2"><strong>Dimensions:</strong> <span
                                        class="ms-1">@Model.Book.Dimensions</span></div>
                            </div>
                        </div>
                    </div>
                    <div class="row g-4 mt-3">
                        <!-- AI Generated Information -->
                        <div class="col-md-6">
                            <h5 class="text-muted mb-3"><i class="bi bi-robot me-2"></i>AI Generated Information</h5>
                            <div>
                                @if (Model.Book.MinAge != 0 && Model.Book.MaxAge != 0)
                                {
                                    <div class="mb-2"><strong>Age Range:</strong>
                                        <italic>(AI classification)</italic> <span class="ms-1">@Model.Book.MinAge -
                                            @Model.Book.MaxAge</span>
                                    </div>
                                    <div>
                                        <strong>Age Classification Reasoning:</strong>
                                        <p>@Model.Book.ClassificationReasoning</p>
                                    </div>
                                }
                                else
                                {
                                    <div class="mb-2">No AI-generated age classification available for this book.</div>
                                }
                            </div>
                        </div>
                    </div>

                    <!-- Book ID (Technical) -->
                    <div class="mt-4 pt-3 border-top">
                        <small class="text-muted"><strong>Book ID:</strong> <code>@Model.Book.BookId</code></small>
                    </div>
                </div>
            </div>
        </div>

        <!-- Book Copies Tab -->
        <div class="tab-pane fade" id="copies-pane" role="tabpanel" aria-labelledby="copies-tab">
            <div class="card shadow-sm">
                <div class="card-body">
                    @if (Model.Book.BookInstances == null || !Model.Book.BookInstances.Any())
                    {
                        <div class="alert alert-info mb-0">
                            <i class="bi bi-info-circle me-2"></i>No copies found for this book.
                        </div>
                    }
                    else
                    {
                        <div class="table-responsive">
                            <table class="table table-hover align-middle mb-0">
                                <thead class="table-light">
                                    <tr>
                                        <th style="width: 100px;">Copy #</th>
                                        <th>Status</th>
                                        <th>Borrowed By</th>
                                        <th>Checkout Date</th>
                                        <th>Due Date</th>
                                        <th style="width: 150px;">Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @for (int i = 0; i < Model.Book.BookInstances.Count; i++)
                                    {
                                        var inst = Model.Book.BookInstances[i];
                                        var number = i + 1;
                                        <tr>
                                            <td><strong>Copy @number</strong></td>
                                            <td>
                                                @switch (inst.Status)
                                                {
                                                    case LaurelLibrary.Domain.Enums.BookInstanceStatus.Available:
                                                        <span class="badge bg-success">
                                                            <i class="bi bi-check-circle me-1"></i>Available
                                                        </span>
                                                        break;
                                                    case LaurelLibrary.Domain.Enums.BookInstanceStatus.Borrowed:
                                                        <span class="badge bg-warning text-dark">
                                                            <i class="bi bi-arrow-right-circle me-1"></i>Borrowed
                                                        </span>
                                                        break;
                                                    case LaurelLibrary.Domain.Enums.BookInstanceStatus.Reserved:
                                                        <span class="badge bg-info text-dark">
                                                            <i class="bi bi-bookmark me-1"></i>Reserved
                                                        </span>
                                                        break;
                                                    case LaurelLibrary.Domain.Enums.BookInstanceStatus.Lost:
                                                        <span class="badge bg-danger">
                                                            <i class="bi bi-exclamation-triangle me-1"></i>Lost
                                                        </span>
                                                        break;
                                                    case LaurelLibrary.Domain.Enums.BookInstanceStatus.Damaged:
                                                        <span class="badge bg-secondary">
                                                            <i class="bi bi-wrench me-1"></i>Damaged
                                                        </span>
                                                        break;
                                                    default:
                                                        <span class="badge bg-secondary">@inst.Status.ToString()</span>
                                                        break;
                                                }
                                            </td>
                                            <td>
                                                @if (inst.Reader != null)
                                                {
                                                    <span>@inst.Reader.FirstName @inst.Reader.LastName</span>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">—</span>
                                                }
                                            </td>
                                            <td>
                                                @if (inst.CheckedOutDate.HasValue)
                                                {
                                                    <span>@inst.CheckedOutDate.Value.ToString("MMM d, yyyy")</span>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">—</span>
                                                }
                                            </td>
                                            <td>
                                                @if (inst.DueDate.HasValue)
                                                {
                                                    var isOverdue = inst.DueDate.Value < DateTimeOffset.Now && inst.Status ==
                                                    LaurelLibrary.Domain.Enums.BookInstanceStatus.Borrowed;
                                                    <span class="@(isOverdue ? "text-danger fw-bold" : "")">
                                                        @inst.DueDate.Value.ToString("MMM d, yyyy")
                                                        @if (isOverdue)
                                                        {
                                                            <i class="bi bi-exclamation-circle ms-1" title="Overdue"></i>
                                                        }
                                                    </span>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">—</span>
                                                }
                                            </td>
                                            <td>
                                                <div class="dropdown">
                                                    <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button"
                                                        id="statusDropdown@(inst.BookInstanceId)" data-bs-toggle="dropdown"
                                                        aria-expanded="false">
                                                        Change Status
                                                    </button>
                                                    <ul class="dropdown-menu dropdown-menu-end"
                                                        aria-labelledby="statusDropdown@(inst.BookInstanceId)">
                                                        @foreach (var status in
                                                                                                    Enum.GetValues<LaurelLibrary.Domain.Enums.BookInstanceStatus>())
                                                        {
                                                            @if (status != inst.Status)
                                                            {
                                                                <li>
                                                                    <form method="post" asp-page-handler="ChangeStatus" class="d-inline">
                                                                        <input type="hidden" name="id" value="@Model.Book.BookId" />
                                                                        <input type="hidden" name="bookInstanceId"
                                                                            value="@inst.BookInstanceId" />
                                                                        <input type="hidden" name="newStatus" value="@status" />
                                                                        <button type="submit" class="dropdown-item">
                                                                            @switch (status)
                                                                            {
                                                                                case LaurelLibrary.Domain.Enums.BookInstanceStatus.Available:
                                                                                    <i class="bi bi-check-circle me-2 text-success"></i>
                                                                                    <span>Available</span>
                                                                                    break;
                                                                                case LaurelLibrary.Domain.Enums.BookInstanceStatus.Borrowed:
                                                                                    <i class="bi bi-arrow-right-circle me-2 text-warning"></i>
                                                                                    <span>Borrowed</span>
                                                                                    break;
                                                                                case LaurelLibrary.Domain.Enums.BookInstanceStatus.Reserved:
                                                                                    <i class="bi bi-bookmark me-2 text-info"></i>
                                                                                    <span>Reserved</span>
                                                                                    break;
                                                                                case LaurelLibrary.Domain.Enums.BookInstanceStatus.Lost:
                                                                                    <i class="bi bi-exclamation-triangle me-2 text-danger"></i>
                                                                                    <span>Lost</span>
                                                                                    break;
                                                                                case LaurelLibrary.Domain.Enums.BookInstanceStatus.Damaged:
                                                                                    <i class="bi bi-wrench me-2 text-secondary"></i>
                                                                                    <span>Damaged</span>
                                                                                    break;
                                                                            }
                                                                        </button>
                                                                    </form>
                                                                </li>
                                                            }
                                                        }
                                                    </ul>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Audit Information Tab -->
        <div class="tab-pane fade" id="audit-pane" role="tabpanel" aria-labelledby="audit-tab">
            <div class="card shadow-sm">
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <h6 class="text-muted mb-2">Created</h6>
                                <div class="mb-1">
                                    <strong>Date:</strong>
                                    <span class="ms-1">@Model.Book.CreatedAt.ToString("g")</span>
                                </div>
                                <div>
                                    <strong>By:</strong>
                                    <span class="ms-1">@Model.Book.CreatedBy</span>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <h6 class="text-muted mb-2">Last Updated</h6>
                                <div class="mb-1">
                                    <strong>Date:</strong>
                                    <span class="ms-1">@Model.Book.UpdatedAt.ToString("g")</span>
                                </div>
                                <div>
                                    <strong>By:</strong>
                                    <span class="ms-1">@Model.Book.UpdatedBy</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        // Ensure Bootstrap dropdowns are properly initialized
        document.addEventListener('DOMContentLoaded', function () {
            // Initialize all dropdowns
            var dropdownElementList = [].slice.call(document.querySelectorAll('.dropdown-toggle'));
            var dropdownList = dropdownElementList.map(function (dropdownToggleEl) {
                return new bootstrap.Dropdown(dropdownToggleEl);
            });

            // Add confirmation for status changes
            document.querySelectorAll('form[asp-page-handler="ChangeStatus"] button').forEach(function (button) {
                button.addEventListener('click', function (e) {
                    var status = this.querySelector('span').textContent;
                    if (!confirm('Are you sure you want to change the status to ' + status + '?')) {
                        e.preventDefault();
                    }
                });
            });
        });
    </script>
}