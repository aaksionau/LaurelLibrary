@page "{pageNumber:int?}/{pageSize:int?}"
@model LaurelLibrary.UI.Areas.Administration.Pages.Readers.ListModel

@{
    ViewData["Title"] = "Readers";
}

<div class="card">
    <div class="card-header">
        <h3 class="d-inline">Readers</h3>
        <div class="float-end">
            <button class="btn btn-success me-2" onclick="printAllBarcodes()"><i class="bi bi-printer"></i> Print All Barcodes</button>
            <a class="btn btn-info me-2" asp-area="Administration" asp-page="/Readers/Update">Add Reader</a>
        </div>
    </div>
    <div class="card-body">
        @if (!string.IsNullOrWhiteSpace(Model.StatusMessage))
        {
            <div class="alert alert-info">@Model.StatusMessage</div>
        }
        <div class="mb-4 p-3 border rounded bg-light">
            <form method="get" class="mb-0">
                <div class="row g-2 align-items-end">
                    <div class="col">
                        <input class="form-control" type="text" name="SearchTerm" value="@Model.SearchTerm" placeholder="Search by name" />
                    </div>

                    <input type="hidden" name="pageNumber" value="@Model.PageNumber" />
                    <input type="hidden" name="pageSize" value="@Model.PageSize" />

                    <div class="col-auto ms-auto">
                        <button type="submit" class="btn btn-primary me-2">Filter</button>
                        <a class="btn btn-secondary" href="@Url.Page("/Readers/List", new { area = "Administration" })">Clear</a>
                    </div>
                </div>
            </form>
        </div>
        @if (Model.Readers.Any())
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>First Name</th>
                        <th>Last Name</th>
                        <th>Libraries</th>
                        <th class="text-end">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var reader in Model.Readers)
                    {
                        <tr class="clickable-row" data-href="@Url.Page("/Readers/Details", new { area = "Administration", id = reader.ReaderId })" style="cursor: pointer;">
                            <td>@reader.FirstName</td>
                            <td>@reader.LastName</td>
                            <td>@string.Join(", ", reader.LibraryNames)</td>
                            <td class="text-end">
                                <a class="btn btn-link text-primary p-0 me-2" asp-page="/Readers/Update" asp-route-id="@reader.ReaderId" title="Edit" onclick="event.stopPropagation();"><i class="bi bi-pencil"></i></a>

                                <form method="post" asp-page-handler="Delete" class="d-inline" onsubmit="event.stopPropagation(); return confirm('Are you sure you want to delete this reader?');">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="readerId" value="@reader.ReaderId" />
                                    <button type="submit" class="btn btn-link text-danger p-0" title="Delete" onclick="event.stopPropagation();"><i class="bi bi-trash"></i></button>
                                </form>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <p class="text-center text-muted">No Readers</p>
        }

        @await Component.InvokeAsync(
            typeof(LaurelLibrary.UI.ViewComponents.PaginationControlsViewComponent), 
            new { 
                model = new LaurelLibrary.UI.ViewModels.PaginationViewModel 
                { 
                    PageNumber = Model.PageNumber, 
                    PageSize = Model.PageSize, 
                    TotalPages = Model.TotalPages, 
                    TotalCount = Model.TotalCount, 
                    Area = "Administration", 
                    Page = "/Readers/List" 
                } 
            })
    </div>
</div>

<!-- Hidden print area -->
<div id="printArea" style="display: none;">
    <style>
        @@media print {
            @@page {
                size: auto;
                margin: 10mm;
            }
            body {
                margin: 0;
            }
            .print-container {
                display: flex;
                flex-wrap: wrap;
                gap: 15px;
            }
            .print-barcode-card {
                page-break-inside: avoid;
                width: calc(50% - 10px);
                border: 1px solid #ddd;
                padding: 15px;
                text-align: center;
                box-sizing: border-box;
            }
            .print-barcode-card h4 {
                margin: 10px 0 5px 0;
                font-size: 16px;
            }
            .print-barcode-card p {
                margin: 5px 0;
                font-size: 12px;
            }
            .print-barcode-card img {
                max-width: 100%;
                height: auto;
            }
        }
    </style>
    <div class="print-container">
        @foreach (var reader in Model.AllReaders)
        {
            if (!string.IsNullOrEmpty(reader.BarcodeImageUrl))
            {
                <div class="print-barcode-card">
                    <h4>@reader.FirstName @reader.LastName</h4>
                    <p><strong>EAN:</strong> @reader.Ean</p>
                    <p><strong>Library:</strong> @string.Join(", ", reader.LibraryNames)</p>
                    <img src="@reader.BarcodeImageUrl" alt="Barcode for @reader.FullName" />
                </div>
            }
        }
    </div>
</div>

@section Scripts {
    <script>
        // Make table rows clickable
        document.querySelectorAll('.clickable-row').forEach(row => {
            row.addEventListener('click', function() {
                window.location.href = this.dataset.href;
            });
        });

        function printAllBarcodes() {
            // Clone the print area
            var printContent = document.getElementById('printArea').innerHTML;
            
            // Create a new window for printing
            var printWindow = window.open('', '_blank');
            printWindow.document.write('<html><head><title>Print Barcodes</title>');
            printWindow.document.write('<style>');
            printWindow.document.write('@@page { size: auto; margin: 10mm; }');
            printWindow.document.write('body { margin: 0; font-family: Arial, sans-serif; }');
            printWindow.document.write('.print-container { display: flex; flex-wrap: wrap; gap: 15px; }');
            printWindow.document.write('.print-barcode-card { page-break-inside: avoid; width: calc(50% - 10px); border: 1px solid #ddd; padding: 15px; text-align: center; box-sizing: border-box; }');
            printWindow.document.write('.print-barcode-card h4 { margin: 10px 0 5px 0; font-size: 16px; }');
            printWindow.document.write('.print-barcode-card p { margin: 5px 0; font-size: 12px; }');
            printWindow.document.write('.print-barcode-card img { max-width: 100%; height: auto; }');
            printWindow.document.write('</style>');
            printWindow.document.write('</head><body>');
            printWindow.document.write(printContent);
            printWindow.document.write('</body></html>');
            printWindow.document.close();
            
            // Wait for images to load before printing
            printWindow.onload = function() {
                printWindow.focus();
                printWindow.print();
                printWindow.close();
            };
        }
    </script>
}
