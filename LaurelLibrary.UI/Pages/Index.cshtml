@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

@if (Model.Library != null)
{
    <div class="container py-5" style="min-height: 80vh;">
        <div class="row justify-content-center align-items-center">
            <!-- Library Header Section -->
            <div class="col-12 text-center mb-5 pb-4">
                @if (!string.IsNullOrEmpty(Model.Library.Logo))
                {
                    <div class="mb-4">
                        <img src="@Model.Library.Logo" alt="@Model.Library.Name Logo" class="img-fluid"
                            style="max-height: 250px; object-fit: contain;" />
                    </div>
                }
                <h1 class="display-3 mb-3 fw-bold" style="color: #2c3e50;">@Model.Library.Name</h1>
                @if (Model.Kiosk != null)
                {
                    <p class="text-muted fs-5">
                        <i class="bi bi-geo-alt-fill me-2"></i>Kiosk Location: @Model.Kiosk.Location
                    </p>
                }
                <hr class="w-50 mx-auto mt-4 mb-5" style="border-top: 3px solid #6c9fa8; opacity: 1;">
            </div>

            <!-- Action Buttons Section -->
            <div class="col-md-10 col-lg-8">
                <div class="row g-5">
                    <!-- Return Books Card -->
                    <div class="col-md-6">
                        <div class="card shadow-lg border-0 h-100" style="border-radius: 12px; overflow: hidden;">
                            <div class="card-body p-0">
                                <a asp-page="/Return" asp-route-libraryId="@Model.LibraryId"
                                    asp-route-kioskId="@Model.KioskId"
                                    asp-route-browserFingerprint="@Model.BrowserFingerprint"
                                    class="btn w-100 h-100 py-5 d-flex flex-column align-items-center justify-content-center text-decoration-none"
                                    style="font-size: 1.5rem; background: linear-gradient(135deg, #28a745 0%, #20c997 100%); color: white; border: none; min-height: 280px;">
                                    <i class="bi bi-box-arrow-in-left mb-4" style="font-size: 4rem;"></i>
                                    <span class="fw-bold mb-2">Return Books</span>
                                    <small class="opacity-75" style="font-size: 0.9rem;">Drop off your borrowed
                                        items</small>
                                </a>
                            </div>
                        </div>
                    </div>

                    <!-- Checkout Books Card -->
                    <div class="col-md-6">
                        <div class="card shadow-lg border-0 h-100" style="border-radius: 12px; overflow: hidden;">
                            <div class="card-body p-0">
                                <a asp-page="/Checkout" asp-route-libraryId="@Model.LibraryId"
                                    asp-route-kioskId="@Model.KioskId"
                                    asp-route-browserFingerprint="@Model.BrowserFingerprint"
                                    class="btn w-100 h-100 py-5 d-flex flex-column align-items-center justify-content-center text-decoration-none"
                                    style="font-size: 1.5rem; background: linear-gradient(135deg, #6c9fa8 0%, #4a7c87 100%); color: white; border: none; min-height: 280px;">
                                    <i class="bi bi-box-arrow-right mb-4" style="font-size: 4rem;"></i>
                                    <span class="fw-bold mb-2">Checkout Books</span>
                                    <small class="opacity-75" style="font-size: 0.9rem;">Borrow items from the
                                        library</small>
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <div class="container d-flex align-items-center justify-content-center py-5" style="min-height: 80vh;">
        <div class="text-center">
            <div class="mb-5">
                <i class="bi bi-book-fill" style="font-size: 6rem; color: #6c9fa8;"></i>
            </div>
            <h1 class="display-3 mb-4 fw-bold" style="color: #2c3e50;">Laurel Library</h1>
            <p class="lead text-muted mb-5 fs-4">Modern Library Management System</p>

            <div class="card shadow-sm border-0 mx-auto" style="max-width: 600px; border-radius: 12px;">
                <div class="card-body p-5">
                    <p class="text-muted mb-4 fs-5">
                        Welcome to Laurel Library - a comprehensive solution for managing library operations,
                        book checkouts, returns, and member management.
                    </p>
                    <hr class="my-4">
                    <div class="alert alert-info border-0" role="alert" style="background-color: #e8f4f5;">
                        <i class="bi bi-info-circle-fill me-2"></i>
                        <small>Please configure your library and kiosk settings to get started.</small>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/@@fingerprintjs/fingerprintjs@4/dist/fp.min.js"></script>
    <script>
        // Initialize FingerprintJS and handle redirect with localStorage parameters
        (async function () {
            const urlParams = new URLSearchParams(window.location.search);
            const hasLibraryId = urlParams.has('libraryId');
            const hasKioskId = urlParams.has('kioskId');
            const hasBrowserFingerprint = urlParams.has('browserFingerprint');

            // If all parameters are already in the URL, do nothing
            if (hasLibraryId && hasKioskId && hasBrowserFingerprint) {
                return;
            }

            // Get or generate browserFingerprint
            let browserFingerprint = localStorage.getItem('browserFingerprint');

            if (!browserFingerprint) {
                try {
                    // Initialize FingerprintJS
                    const fp = await FingerprintJS.load();
                    const result = await fp.get();
                    browserFingerprint = result.visitorId;

                    // Save to localStorage
                    localStorage.setItem('browserFingerprint', browserFingerprint);
                } catch (error) {
                    console.error('Error generating fingerprint:', error);
                    // Fallback to a random ID if FingerprintJS fails
                    browserFingerprint = 'fallback-' + Date.now() + '-' + Math.random().toString(36).substr(2, 9);
                    localStorage.setItem('browserFingerprint', browserFingerprint);
                }
            }

            // Get other parameters from localStorage
            const libraryId = localStorage.getItem('libraryId');
            const kioskId = localStorage.getItem('kioskId');

            // If we have all required parameters in localStorage, redirect
            if (libraryId && kioskId && browserFingerprint) {
                const params = new URLSearchParams();
                params.set('libraryId', libraryId);
                params.set('kioskId', kioskId);
                params.set('browserFingerprint', browserFingerprint);

                // Redirect to the same page with parameters
                window.location.href = `${window.location.pathname}?${params.toString()}`;
            } else {
                // If no parameters available, show error message
                console.warn('Missing library/kiosk information in localStorage');
            }
        })();
    </script>
}