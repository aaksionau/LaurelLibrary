@page
@model LaurelLibrary.UI.Pages.ReaderBorrowedBooksModel
@{
    ViewData["Title"] = "My Borrowed Books";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-12">
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                    <div>
                        <h3 class="mb-0">
                            <i class="bi bi-book-fill me-2"></i>My Borrowed Books
                        </h3>
                    </div>
                    <form method="post" asp-page-handler="Logout">
                        <button type="submit" class="btn btn-outline-light btn-sm">
                            <i class="bi bi-box-arrow-right me-1"></i>Logout
                        </button>
                    </form>
                </div>

                <div class="card-body">
                    @if (!string.IsNullOrEmpty(Model.ErrorMessage))
                    {
                        <div class="alert alert-danger" role="alert">
                            <i class="bi bi-exclamation-triangle-fill me-2"></i>@Model.ErrorMessage
                        </div>
                    }

                    @if (Model.Reader != null)
                    {
                        <div class="alert alert-info mb-4" role="alert">
                            <i class="bi bi-person-circle me-2"></i>
                            <strong>Welcome, @Model.Reader.FullName!</strong>
                            <br />
                            <small class="text-muted">EAN: @Model.Reader.Ean</small>
                        </div>
                    }

                    @if (Model.BorrowedBooks.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead class="table-light">
                                    <tr>
                                        <th scope="col">
                                            <i class="bi bi-book me-1"></i>Book Title
                                        </th>
                                        <th scope="col">
                                            <i class="bi bi-person me-1"></i>Author(s)
                                        </th>
                                        <th scope="col">
                                            <i class="bi bi-upc me-1"></i>ISBN
                                        </th>
                                        <th scope="col">
                                            <i class="bi bi-calendar-check me-1"></i>Checked Out
                                        </th>
                                        <th scope="col">
                                            <i class="bi bi-calendar-x me-1"></i>Due Date
                                        </th>
                                        <th scope="col">Status</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var book in Model.BorrowedBooks)
                                    {
                                        var isOverdue = book.DueDate.HasValue && book.DueDate.Value < DateTimeOffset.Now;
                                        var daysUntilDue = book.DueDate.HasValue ? (book.DueDate.Value - DateTimeOffset.Now).Days : 0;
                                        
                                        <tr class="@(isOverdue ? "table-danger" : "")">
                                            <td>
                                                <strong>@book.BookTitle</strong>
                                            </td>
                                            <td>@book.AuthorNames</td>
                                            <td>
                                                <code class="small">@book.BookIsbn</code>
                                            </td>
                                            <td>
                                                @if (book.CheckedOutDate.HasValue)
                                                {
                                                    @book.CheckedOutDate.Value.ToString("MMM dd, yyyy")
                                                }
                                                else
                                                {
                                                    <span class="text-muted">N/A</span>
                                                }
                                            </td>
                                            <td>
                                                @if (book.DueDate.HasValue)
                                                {
                                                    <span class="@(isOverdue ? "text-danger fw-bold" : "")">
                                                        @book.DueDate.Value.ToString("MMM dd, yyyy")
                                                    </span>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">N/A</span>
                                                }
                                            </td>
                                            <td>
                                                @if (isOverdue)
                                                {
                                                    <span class="badge bg-danger">
                                                        <i class="bi bi-exclamation-triangle-fill me-1"></i>Overdue
                                                    </span>
                                                }
                                                else if (daysUntilDue <= 3)
                                                {
                                                    <span class="badge bg-warning text-dark">
                                                        <i class="bi bi-clock-fill me-1"></i>Due Soon
                                                    </span>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-success">
                                                        <i class="bi bi-check-circle-fill me-1"></i>Active
                                                    </span>
                                                }
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                        <div class="alert alert-light mt-4 mb-0" role="alert">
                            <div class="row">
                                <div class="col-md-4">
                                    <i class="bi bi-info-circle-fill me-2"></i>
                                    <strong>Total Borrowed:</strong> @Model.BorrowedBooks.Count
                                </div>
                                <div class="col-md-4">
                                    <i class="bi bi-exclamation-triangle-fill text-danger me-2"></i>
                                    <strong>Overdue:</strong> @Model.BorrowedBooks.Count(b => b.DueDate.HasValue && b.DueDate.Value < DateTimeOffset.Now)
                                </div>
                                <div class="col-md-4">
                                    <i class="bi bi-clock-fill text-warning me-2"></i>
                                    <strong>Due Soon:</strong> @Model.BorrowedBooks.Count(b => b.DueDate.HasValue && (b.DueDate.Value - DateTimeOffset.Now).Days <= 3 && (b.DueDate.Value - DateTimeOffset.Now).Days >= 0)
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="bi bi-inbox" style="font-size: 4rem; color: #ccc;"></i>
                            <h4 class="mt-3 text-muted">No Borrowed Books</h4>
                            <p class="text-muted">You don't have any books checked out at the moment.</p>
                        </div>
                    }
                </div>
            </div>

            <div class="text-center">
                <a asp-page="/Index" class="btn btn-outline-secondary">
                    <i class="bi bi-house-fill me-1"></i>Back to Home
                </a>
            </div>
        </div>
    </div>
</div>
